model {

	for (g in 1:Ngrps) {
  	for (k in 2:(nYlevels-2)) {
  		thresh[k, g] ~ dnorm(k+0.5, 1/2^2)
  	}
	  
		b0.mu[g] ~ dnorm(0.0, 1.0E-5) # prior beta0
		b1.mu[g] ~ dnorm(0.0, 1.0E-5) # prior beta1
		b2.mu[g] ~ dnorm(0.0, 1.0E-5) # prior beta2

		b0.sig[g] ~ dunif(1.0E-4, 100) # prior beta0 error
		b1.sig[g] ~ dunif(1.0E-4, 100) # prior beta1 error
		b2.sig[g] ~ dunif(1.0E-4, 100) # prior beta2 error

		sig[g] ~ dunif(nYlevels/1000 , nYlevels*10) 
    
		for (s in 1:Nsubj[g]){
			b0.s[s, g] ~ dnorm(b0.mu[g], 1/(b0.sig[g]^2))
			b1.s[s, g] ~ dnorm(b1.mu[g], 1/(b1.sig[g]^2))
			b2.s[s, g] ~ dnorm(b2.mu[g], 1/(b2.sig[g]^2))
		}
	}

	for (i in 1:Ntotal) {
		mu[i] <- b0.s[subIdx[i], grpIdx[i]] * 1.0   + 
          	 b1.s[subIdx[i], grpIdx[i]] * x1[i] + 
          	 b2.s[subIdx[i], grpIdx[i]] * x2[i]
  
		pr[i,1] <- pnorm(thresh[1, grpIdx[i]] , mu[i] , 1/sig[grpIdx[i]]^2)
		
		for (k in 2:(nYlevels-1)) {
			pr[i, k] <- max(0,  pnorm(thresh[k, grpIdx[i]], mu[i], 1/sig[grpIdx[i]]^2) - 
												  pnorm(thresh[k-1, grpIdx[i]], mu[i], 1/sig[grpIdx[i]]^2))
		}
		
		pr[i, nYlevels] <- 1 - pnorm(thresh[nYlevels-1, grpIdx[i]], mu[i], 1/sig[grpIdx[i]]^2) 
    
		y[i] ~ dcat(pr[i,1:nYlevels])
	}
}
