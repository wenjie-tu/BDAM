model {

	for (g in 1:Ngroups) {
		# min and max thresholds are fixed, not stochastic
  	for ( k in 2:(nYlevels-2) ) {
  		thresh[k, g] ~ dnorm( k+0.5, 1/2^2 )
  	}
	
		# group-specific priors
		beta0.mu[g] ~ dnorm(0, 0.00001) # prior intercept
		beta1.mu[g] ~ dnorm(0, 0.00001) # prior slope1
		beta2.mu[g] ~ dnorm(0, 0.00001) # prior slope2

		beta0.sig[g] ~ dunif(0.0001, 100) # prior intercept error
		beta1.sig[g] ~ dunif(0.0001, 100) # prior slope error
		beta2.sig[g] ~ dunif(0.0001, 100) # prior slope error

		sigma[g] ~ dunif(nYlevels/1000 , nYlevels*10) # prior for the standard deviation

		# now subj-specific betas
		for (s in 1:Nsubj[g]){
			beta0.s[s,g] ~ dnorm(beta0.mu[g], 1/(beta0.sig[g]^2))
			beta1.s[s,g] ~ dnorm(beta1.mu[g], 1/(beta1.sig[g]^2))
			beta2.s[s,g] ~ dnorm(beta2.mu[g], 1/(beta2.sig[g]^2))
		}
	}

	for (i in 1:Ntotal) {
		# compute mu
		mu[i] <- beta0.s[subIdx[i, 1], subIdx[i, 2]] + beta1.s[subIdx[i, 1], subIdx[i, 2]]*x1[i] + beta2.s[subIdx[i, 1], subIdx[i, 2]]*x2[i]

		# compute the probability of each categorical response given mu & thresholds
		pr[i,1] <- pnorm( thresh[1, subIdx[i, 2]] , mu[i] , 1/sigma[subIdx[i, 2]]^2 ) #prob < min thresh
		for ( k in 2:(nYlevels-1) ) {
			pr[i,k] <- max( 0 ,  pnorm( thresh[ k , subIdx[i, 2]] , mu[i] , 1/sigma[subIdx[i, 2]]^2 )
												 - pnorm( thresh[k-1, subIdx[i, 2]] , mu[i] , 1/sigma[subIdx[i, 2]]^2 ) )
		}
		pr[i,nYlevels] <- 1 - pnorm( thresh[nYlevels-1, subIdx[i, 2]] , mu[i] , 1/sigma[subIdx[i, 2]]^2 ) #prob > max thresh

		# draw y stochastically given the probabilities above
		y[i] ~ dcat( pr[i,1:nYlevels] )

	}

}